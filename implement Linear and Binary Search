#include <stdio.h>

// Function to perform Linear Search on an array
int linearSearch(int arr[], int size, int target) {
    for (int i = 0; i < size; i++) {
        if (arr[i] == target) {
            return i; // Return the index of the target element
        }
    }
    return -1; // Return -1 if the element is not found
}

// Function to perform Binary Search on a sorted array
int binarySearch(int arr[], int size, int target) {
    int left = 0, right = size - 1;
    while (left <= right) {
        int mid = left + (right - left) / 2;

        if (arr[mid] == target) {
            return mid; // Return the index of the target element
        }

        if (arr[mid] < target) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }
    return -1; // Return -1 if the element is not found
}

int main() {
    int arr[] = {3, 9, 10, 27, 38, 43, 82};
    int size = sizeof(arr) / sizeof(arr[0]);

    int targetLinear = 27;
    int targetBinary = 38;

    printf("Array: 3 9 10 27 38 43 82\n");

    // Linear Search
    int linearResult = linearSearch(arr, size, targetLinear);
    if (linearResult != -1) {
        printf("Linear Search: Element %d found at index %d\n", targetLinear, linearResult);
    } else {
        printf("Linear Search: Element %d not found in the array\n", targetLinear);
    }

    // Binary Search (for sorted array)
    int binaryResult = binarySearch(arr, size, targetBinary);
    if (binaryResult != -1) {
        printf("Binary Search: Element %d found at index %d\n", targetBinary, binaryResult);
    } else {
        printf("Binary Search: Element %d not found in the array\n", targetBinary);
    }

    return 0;
}
